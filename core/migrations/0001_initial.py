# Generated by Django 4.0.6 on 2022-08-09 17:30

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=150)),
                ('second_name', models.CharField(blank=True, max_length=150)),
                ('paternal_last_name', models.CharField(max_length=150)),
                ('maternal_last_name', models.CharField(blank=True, max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=core.models.get_path)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(max_length=200)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='books/')),
                ('edition', models.CharField(max_length=50)),
                ('language', models.CharField(max_length=80)),
                ('page_number', models.IntegerField(default=0)),
                ('publishier', models.CharField(max_length=100)),
                ('rating', models.FloatField(default=8.0)),
                ('available', models.BooleanField(default=True)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
                ('books', models.ManyToManyField(related_name='carts', to='core.book')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'shopping_cart',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(related_name='books', to='core.category'),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80)),
                ('second_name', models.CharField(max_length=80)),
                ('paternal_last_name', models.CharField(max_length=80)),
                ('maternal_last_name', models.CharField(max_length=80)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='book_authors/')),
                ('country', models.CharField(max_length=70)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
                ('books', models.ManyToManyField(related_name='authors', to='core.book')),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1.0), ('rating__lte', 10.0)), name='rating_gte_1.0_and_lte_10.0'),
        ),
    ]
